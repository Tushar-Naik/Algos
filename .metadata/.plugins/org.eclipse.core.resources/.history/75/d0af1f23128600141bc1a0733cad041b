package com.flipkart.programs;

import java.util.HashMap;

public class LRUCache<K> {

	/**
	 * Linkedlist + Hashmap
	 */
	private Node head, tail ;
	private HashMap<K,Node> map = new HashMap<K,Node>();
	private static final int CAPACTITY = 10;
	private int currentSize = 0;
	
	private static class Node{
		Node next;
		Node prev;
		public Node(Node prev, Node next) {
			this.prev = prev;
			this.next = next;
		}
	}
	
	public void put(K key, Node val){
		map.put(key, val);
		addToLinkedList(val);
		
	}
	
	private void addToLinkedList(Node val) {
		if (head==null){
			Node newNode = new Node(null, null) ;
			head = newNode; tail = newNode;
			currentSize++;
		}else {
			//Capacity check delete the oldest
			if(currentSize==CAPACTITY){
				Node tmp = tail;
				tail.next.prev = null;
				tail = tail.next;
				tmp = null; currentSize--;
			}
			Node newNode = new Node(head, null ) ;
			head.next = newNode;
			head = newNode;
			currentSize++;
		}
	}

	public V get(K key){
		return map.get(key);
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
