package com.fb.graph;

import java.util.HashSet;

public class FindCycle<T> {

	/**
	 * Finding cycle in an Directed Graph. Like a topologocal sort
	 * Run on all nodes and do dfs
	 */
	private DirectedGraph<T> graph;
	private HashSet<T> visited = new HashSet<T>();
	
	public FindCycle(DirectedGraph<T> graph){
		this.graph = graph;
	}
	
	public void findCycle(){
		for(T node: graph){
			if(!visited.contains(node)){
				dfs(node);
			}
		}
	}
	public void dfs(T node){
		visited.add(node);
		for(T leaf : graph.getAdjacentNodes(node)){
			if(!visited.contains(leaf)){
				dfs(leaf);
			}
		}
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
