package com.linkedin.algos;

public class FindLoopLL<T> {

        public void findLoop(Node<T> node){
                Node<T> slow = node ;
                Node<T> fast= node ;
                while(fast!=null & fast.next!= null && fast.next.next!=null){
                        fast = fast.next.next;
                        slow = slow.next;
                        if (fast == slow){
                                System.out.println("Cycle detected");
                                return;
                        }
                }
                System.out.println("No Cycle detected");

        }

        public static void main(String[] args) {
                Node<Integer> first = new Node<Integer>(1);
                Node<Integer> second = new Node<Integer>(2);
                Node<Integer> third = new Node<Integer>(3);
                Node<Integer> fourth = new Node<Integer>(4);
                Node<Integer> fifth = new Node<Integer>(5);

                first.setNext(second);
                second.setNext(third);
                third.setNext(fourth);
                fourth.setNext(fifth);
                fifth.setNext(second);
                Node.printLL(first);
//
//              Node.printLL(fourth);
                new FindLoopLL<Integer>().findLoop(first);
        }
}

