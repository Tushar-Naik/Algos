package com.flipkart.programs;

import java.util.HashMap;
import java.util.HashSet;

public class MobilePad {

	/**
	 * Given the mobile numeric keypad. You can only press buttons that are up, left, right or down to the current button. 
	 * You are not allowed to press bottom row corner buttons (i.e. * and # ).
	 * 
	 * Given a number N, find out the number of possible numbers of given length.
	 */
	private static final HashMap<Integer, HashSet<Integer>> map = new HashMap<Integer, HashSet<Integer>>();;
	static{
		map.put(0, new HashSet());
		
	}
	
	public static void main(String[] args) {
		MobilePad pad = new MobilePad();
		UnDirectedGraph<Node> node = pad.new UnDirectedGraph<Node>();
		Node zero = pad.new Node(0);Node one = pad.new Node(1);Node two = pad.new Node(2);Node three = pad.new Node(3);
		Node four = pad.new Node(4);Node five = pad.new Node(5);Node six = pad.new Node(6);Node seven = pad.new Node(7);
		Node eigher = pad.new Node(8);Node nine = pad.new Node(9);
		
		

	}

	private class UnDirectedGraph<T>{
		private final HashMap<T, HashSet<T>> graph =  new HashMap<T, HashSet<T>>();
		public void addNode(T node){
			graph.put(node,new HashSet<T>());
		}
		public void addEdge(T src, T dest){
			if(!graph.containsKey(src) || !graph.containsKey(dest)){
				throw new IllegalArgumentException();
			}
			graph.get(src).add(dest);
			graph.get(dest).add(src);
		}
	}
	
	private final class Node{
		int val;
		int hd;
		public Node(int val, int hd){
			this.val = val;
			this.hd = hd;
		}
		public Node(int val){
			this.val = val;
		}
	}
}
